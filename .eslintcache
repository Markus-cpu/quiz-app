[{"D:\\project\\quiz-app\\src\\index.tsx":"1","D:\\project\\quiz-app\\src\\App.tsx":"2","D:\\project\\quiz-app\\src\\components\\QuestionCard.tsx":"3","D:\\project\\quiz-app\\src\\API.ts":"4","D:\\project\\quiz-app\\src\\utils.ts":"5"},{"size":194,"mtime":1607279911854,"results":"6","hashOfConfig":"7"},{"size":1499,"mtime":1607362865496,"results":"8","hashOfConfig":"7"},{"size":378,"mtime":1607284980042,"results":"9","hashOfConfig":"7"},{"size":939,"mtime":1607364451101,"results":"10","hashOfConfig":"7"},{"size":89,"mtime":1607364284478,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"2ssnmq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\quiz-app\\src\\index.tsx",[],["24","25"],"D:\\project\\quiz-app\\src\\App.tsx",["26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from 'react'\nimport { fetchQuizQuestions } from './API'\n\n// Components\nimport QuestionCard from './components/QuestionCard'\n// Types\nimport { Difficulty } from './API'\n\nconst TOTAL_QUESTIONS = 10\n\nconst App: React.FC = () => {\n\n  const [loading, setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [number, setNumber] = useState(0)\n  const [userAnswers, setUserAnswers] = useState([])\n  const [score, setScore] = useState(0)\n  const [gameOver, setGameOver] = useState(true)\n\n  console.log(fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n  \n  const startTrivia = async () => {\n    try {\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {}\n\n  const nextQuestion = () => {}\n\n  return (\n    <div className=\"app\">\n      <h1>QUIZ APP</h1>\n      <button className=\"app__start\" onClick={startTrivia}>\n        Start Quiz\n      </button>\n      <p className=\"app__score\">Score:</p>\n      <p>Loading qiestion.....</p>\n      {/*<QuestionCard\n         questionNumber={number + 1}\n         totalQuestions={TOTAL_QUESTIONS}\n         question={questions[number].question}\n         answers={questions[number].answers}\n         userAnswer={userAnswers ? userAnswers[number] : undefined}\n         callback={checkAnswer}\n      />*/}\n      <button className=\"app__next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n    </div>\n  )\n}\n\nexport default App\n","D:\\project\\quiz-app\\src\\components\\QuestionCard.tsx",[],"D:\\project\\quiz-app\\src\\API.ts",[],"D:\\project\\quiz-app\\src\\utils.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":13,"column":10,"nodeType":"46","messageId":"47","endLine":13,"endColumn":17},{"ruleId":"44","severity":1,"message":"49","line":13,"column":19,"nodeType":"46","messageId":"47","endLine":13,"endColumn":29},{"ruleId":"44","severity":1,"message":"50","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":19},{"ruleId":"44","severity":1,"message":"51","line":14,"column":21,"nodeType":"46","messageId":"47","endLine":14,"endColumn":33},{"ruleId":"44","severity":1,"message":"52","line":15,"column":10,"nodeType":"46","messageId":"47","endLine":15,"endColumn":16},{"ruleId":"44","severity":1,"message":"53","line":15,"column":18,"nodeType":"46","messageId":"47","endLine":15,"endColumn":27},{"ruleId":"44","severity":1,"message":"54","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":21},{"ruleId":"44","severity":1,"message":"55","line":16,"column":23,"nodeType":"46","messageId":"47","endLine":16,"endColumn":37},{"ruleId":"44","severity":1,"message":"56","line":17,"column":10,"nodeType":"46","messageId":"47","endLine":17,"endColumn":15},{"ruleId":"44","severity":1,"message":"57","line":17,"column":17,"nodeType":"46","messageId":"47","endLine":17,"endColumn":25},{"ruleId":"44","severity":1,"message":"58","line":18,"column":10,"nodeType":"46","messageId":"47","endLine":18,"endColumn":18},{"ruleId":"44","severity":1,"message":"59","line":18,"column":20,"nodeType":"46","messageId":"47","endLine":18,"endColumn":31},{"ruleId":"44","severity":1,"message":"60","line":29,"column":9,"nodeType":"46","messageId":"47","endLine":29,"endColumn":20},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'QuestionCard' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'gameOver' is assigned a value but never used.","'setGameOver' is assigned a value but never used.","'checkAnswer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]